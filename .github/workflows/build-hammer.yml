name: .NET

on:
  push:
    branches: [main]
  pull_request:
  workflow_dispatch:

jobs:
  build:
    name: ${{matrix.buildname}}
    runs-on: ${{matrix.os}}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-20.04
            buildname: 'linux'
            qt-version: '5.15.1-7fc8b10'
            # .NET platform identifier
            dotnet-platform: 'linux-x64'
            # .NET platform version:
            dotnet-version: 'net5.0'
            # used for the resulting zip or executable
            deployment-platform: 'linux'
          - os: macos-10.15
            buildname: 'macos'
            qt-version: '5.15.1-7fc8b10'
            dotnet-platform: 'osx-x64'
            dotnet-version: 'net5.0'
            deployment-platform: 'macos'
          - os: windows-2019
            buildname: 'windows'
            qt-version: '5.15.1-7fc8b10'
            dotnet-platform: 'win-x64'
            dotnet-version: 'net5.0'
            deployment-platform: 'win'

    steps:
    - uses: actions/checkout@v2

    - name: Restore maven cache
      uses: actions/cache@v2
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-

    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.x

    - name: Clone Java validator
      run: git clone --depth 1 --shallow-submodules https://github.com/health-validator/org.hl7.fhir.core

      # build Java first as it's needed by .NET for copying into the publish folder
    - name: Build Java validator
      shell: bash
      run: |
        cd org.hl7.fhir.core
        echo "Git revision of the validator code: $(git rev-parse HEAD)"
        mvn package -Dmaven.test.skip=true --projects org.hl7.fhir.validation.cli --no-transfer-progress
        mv org.hl7.fhir.validation.cli/target/org.hl7.fhir.validation.cli*-SNAPSHOT.jar $GITHUB_WORKSPACE/org.hl7.fhir.validator.jar
        cd $GITHUB_WORKSPACE
        java -jar org.hl7.fhir.validator.jar

    - name: (Linux) Build Hammer
      if: runner.os == 'Linux'
      run: |
        sed -i 's|// import appmodel 1.0|import appmodel 1.0|g' Main.qml
        dotnet publish --configuration Release --runtime ${{matrix.dotnet-platform}}

    - name: (macOS) Build Hammer
      if: runner.os == 'macOS'
      run: |
        sed -i '' 's|// import appmodel 1.0|import appmodel 1.0|g' Main.qml
        dotnet publish --configuration Release --runtime ${{matrix.dotnet-platform}}

    - name: (Windows) Build Hammer
      if: runner.os == 'Windows'
      run: |
        sed -i 's|// import appmodel 1.0|import appmodel 1.0|g' Main.qml
        dotnet publish --configuration Release --runtime ${{matrix.dotnet-platform}}

    - name: Download runtime
      shell: bash
      run: |
        curl --location --output qt-runtime.tar.gz https://github.com/qmlnet/qt-runtimes/releases/download/releases/qt-${{matrix.qt-version}}-${{matrix.dotnet-platform}}-runtime.tar.gz
        mkdir -p bin/Release/${{matrix.dotnet-version}}/${{matrix.dotnet-platform}}/publish/qt-runtime
        tar -xf qt-runtime.tar.gz -C bin/Release/${{matrix.dotnet-version}}/${{matrix.dotnet-platform}}/publish/qt-runtime

    - name: Publish as an artifact
      uses: actions/upload-artifact@v2
      with:
        name: hammer-${{matrix.buildname}}
        path: bin/Release/**/publish/

    - name: Zip up for a preview link
      # TODO debug
      # if: github.event_name == 'push'
      shell: bash
      run: cd bin/Release/${{matrix.dotnet-version}}/${{matrix.dotnet-platform}}/publish/ && 7z a -tzip $GITHUB_WORKSPACE/publish/Hammer-${{matrix.deployment-platform}}.zip

    - name: Deploy to a preview link
      # TODO debug
      # if: github.event_name == 'push'
      uses: marvinpinto/action-automatic-releases@1.2.0
      with:
        repo_token: ${{secrets.GITHUB_TOKEN}}
        automatic_release_tag: latest
        prerelease: true
        title: Development Build
        files: $GITHUB_WORKSPACE/publish/Hammer-${{matrix.deployment-platform}}.zip
